#!/bin/bash
set -f

# Configuration variables.
cwd=$(dirname "$(realpath -q "$0")")
sicbin="$cwd/conf/bin/sic"
chans="$cwd/conf/channels"
pipe="$cwd/conf/pipes/"
scriptdir="$cwd/conf/scripts"
script_list=(':')
PATH="$cwd:$cwd/conf/bin:$PATH"

join_channels() {

	# This line is for my testing config.
	[[ -f "$cwd/.chans" ]] && chans="$cwd/.chans"

	# Read from channel file and join channels
	cat "$chans" |
	while read line; do
		[[ "${line:0:1}" == "#" ]] && echo ":j $line" > $pipe/in
	done
	
}

run_scripts() {
	[[ "$nick" == "$bot_nick" ]] && return
	for script in "${script_list[@]}" ; do
		"$script"
	done
}

join_channel() {
	echo ":j $1 $2" > $pipe/in
}

leave_channel() {
	echo ":j $1 $2" > $pipe/in

}

add_channel() {
	echo "$@" >> $chans
	echo ":j $1 $2" > $pipe/in
}

quit_bot() {
	echo ":quit $@" > $pipe/in
}

rm_channel() {
	
	awk "/$1/ {next} {print}" $cwd/.ctemp
	mv $cwd/.ctemp $pipe/channels
}

botsay() {

	# Tokenize input
	read -ra toks <<< "$@"
	chan="${toks[0]}"
	mesg="${toks[@]:1}"
	mesg="${mesg//$'\n'/$' '}" # Strip out all \n 

	# Set the channel
	echo ":s $chan" > $pipe/in
	
	# Split at every 400th character, so the 
	# message isn't too long for the server.
	for ((c = 0; c < "${#mesg}"; c+= 400)); do
		echo "${mesg:c:c+400}" > "$pipe"/in
	done

}

scripts_reload() {
	set +f
	script_list=(':')
	for script in "$scriptdir"/*; do
		if [ -x "$script" ]; then
			source "$script"
			echo "loading script: $script" >> $pipe/out
		else
			echo "not loading script: $script, needs to be marked executable" >> $pipe/out
		fi
	done
	set -f
}

load_script() {
	
	script_list+=("$1")
}

# Load all the scripts when sourcing this file
scripts_reload

if [[ "$1" == "join" ]]; then
	join_channel $2 $3
elif [[ "$1" == "part" ]]; then
	leave_channel "$2"
elif [[ "$1" == "autojoin" ]]; then
	join_channels	
elif [[ "$1" == "add" ]]; then
	add_channel "$2" "$3"
elif [[ "$1" == "remove" ]]; then
	rm_channel "$2"
elif [[ "$1" == "kill" ]]; then
	quit_bot ${@:1}
fi
